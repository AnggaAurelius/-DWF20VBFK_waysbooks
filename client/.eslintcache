[{"D:\\Workspace\\final-task\\client\\src\\index.js":"1","D:\\Workspace\\final-task\\client\\src\\App.js":"2","D:\\Workspace\\final-task\\client\\src\\reportWebVitals.js":"3","D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\index.jsx":"4","D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\login\\index.jsx":"5","D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\register\\index.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":258,"mtime":1613439499008,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":352,"mtime":1613441742721,"results":"11","hashOfConfig":"8"},{"size":2026,"mtime":1613442156843,"results":"12","hashOfConfig":"8"},{"size":2443,"mtime":1613442275018,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1lh55id",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Workspace\\final-task\\client\\src\\index.js",[],["28","29"],"D:\\Workspace\\final-task\\client\\src\\App.js",[],"D:\\Workspace\\final-task\\client\\src\\reportWebVitals.js",[],"D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\index.jsx",[],"D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\login\\index.jsx",["30"],"import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nconst Login = () => {\r\n  const [signInModal, setSignInModal] = useState(false);\r\n  const setOverlay = () => {\r\n    setSignInModal(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button\r\n        className=\"tombol sign signIn\"\r\n        onClick={() => setSignInModal(!signInModal)}\r\n      >\r\n        Sign In\r\n      </button>\r\n      <div className={` pl-5 pr-5 p-4 Modal ${signInModal ? \"Show\" : \"\"}`}>\r\n        <h3 className=\"bold\">Sign In</h3>\r\n        <br />\r\n        <Form className=\"\">\r\n          <Form.Group controlId=\"formBasicEmail\" className=\"form\">\r\n            <Form.Control\r\n              className=\"form\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              // value={email}\r\n              // onChange={(e) => handleLogin(e)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\" className=\"form\">\r\n            <Form.Control\r\n              className=\"form\"\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              // value={password}\r\n              // onChange={(e) => handleLogin(e)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <button className=\"tombol\" type=\"submit\">\r\n            Sign in\r\n          </button>\r\n          <div>\r\n            <br />\r\n            <p className=\"text-center\">\r\n              Don't have an account ?{\" \"}\r\n              <a\r\n                className=\"text-dark\"\r\n                href=\"#\"\r\n                // onClick={() => switching(false)}\r\n              >\r\n                <strong> Klik Here</strong>\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        className={`Overlay ${signInModal ? \"Show\" : \"\"}`}\r\n        onClick={() => setOverlay()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","D:\\Workspace\\final-task\\client\\src\\pages\\LandingPage\\register\\index.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":52,"column":15,"nodeType":"37","endLine":56,"endColumn":16},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]